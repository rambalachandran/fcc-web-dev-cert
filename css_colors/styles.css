h1 {
    text-align: center;
}

    
/* two main color models: the additive RGB (red, green, blue) model used in electronic devices, and the subtractive CMYK (cyan, magenta, yellow, black) model used in print. */
.container{
    /* padding is similar to margin. First value indicates top/bottom, second value indicates left/right */
    padding: 10px 0;
    background-color: rgb(255, 255, 255); /*rgb() is a function in CSS */
}

.marker {    
    height: 25px;
    width: 200px;
    /* margin property has two values, it sets margin-top and margin-bottom to the first value, and margin-left and margin-right to the second value. */
    margin: 10px auto;
}

.cap {
    width: 60px;
    height: 25px;
  }
  
  .sleeve {
    width: 110px;
    height: 25px;
    /* rgba function has alpha as the 4th input which determines opacity (0 -> fully transparent to 1.0 -> fully opaque) */
    background-color: rgba(255, 255, 255, 0.5);
    /* border-left: width style color;  -> a single command to control multiple aspects*/ 

    /* border-left-width:  10px;
    border-left-style: solid; -> double is another style option 
    border-left-color: black; */
    border-left: 10px double rgba(0,0,0, 0.75)
  }

/* The default display property for div elements is block. So when two block elements are next to each other, they stack like actual blocks. For example, your marker elements are all stacked on top of each other. */


.cap, .sleeve{
    display: inline-block;
}
.red{
    /* Secondary colors are created by combining full intensity of two primary colors. Yellow: rgb(255, 255, 0) */
    /* background-color: rgb(255, 255, 0); */
    /* Tertiary colors are created by combining a primary with a nearby secondary color. Orange: rgb(255, 127, 0)*/
    /* linear-gradient(gradientDirection, color1, color2, ...);
        -> `gradientDirection` is the direction of the line used for the transition.
            - 90deg is the direction from left to right.
            - 180deg is in the direction from top to bottom (default value)
        -> `color1` and `color2` are color arguments, which are the colors that will be used in the transition itself. These can be any type of color, including color keywords, hex, rgb, or hsl. */
    
    /* Color-stops allow you to fine-tune where colors are placed along the gradient line. They are a length unit like px or percentages that follow a color in the linear-gradient function. Adding a color stop at 75% from red */
    background: linear-gradient(rgb(122, 74, 14), rgb(245, 62, 113), rgb(162, 27, 27));
    /* box-shadow: offsetX offsetY blurRadius spreadRadius color;
Here's how the offsetX and offsetY values work:

-> both offsetX and offsetY accept number values in px and other CSS units
-> a positive offsetX value moves the shadow right and a negative value moves it left
-> a positive offsetY value moves the shadow down and a negative value moves it up
-> The height and width of the shadow is determined by the height and width of the element it's applied to. 
-> You can also use an optional spreadRadius value to spread out the reach of the shadow.

-> blurRadius is Optional. If a blurRadius value isn't included, it defaults to 0 and produces sharp edges. The higher the value of blurRadius, the greater the blurring effect is.
*/
box-shadow: 0 0 20px 0 rgba(83, 14, 14, 0.8);
}

.green{
    /* Hex color values start with a # character and take six characters from 0-9 and A-F. The first pair of characters represent red, the second pair represent green, and the third pair represent blue. */
    background: linear-gradient(#55680D, #71F53E, #116C31);
    box-shadow: 0 0 20px 0 #3B7E20CC;
}

.blue{
/* The HSL color model, or hue, saturation, and lightness, is another way to represent colors.

The CSS hsl function accepts 3 values: a number from 0 to 360 for hue, a percentage from 0 to 100 for saturation, and a percentage from 0 to 100 for lightness.

If you imagine a color wheel, the hue red is at 0 degrees, green is at 120 degrees, and blue is at 240 degrees.

Saturation is the intensity of a color from 0%, or gray, to 100% for pure color. You must add the percent sign % to the saturation and lightness values.

Lightness is how bright a color appears, from 0%, or complete black, to 100%, complete white, with 50% being neutral. */
background: linear-gradient(hsl(186, 76%, 16%), hsl(223, 90%, 60%), hsl(240, 56%, 42%));
box-shadow: 0 0 20px 0 hsla(223, 59%, 31%, 0.8);
}